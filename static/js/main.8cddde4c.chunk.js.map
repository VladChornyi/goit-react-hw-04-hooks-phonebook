{"version":3,"sources":["components/contactsList/ContactsList.module.css","components/contactsForm/ContactsForm.module.css","components/contactsForm/ContactsForm.jsx","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","components/App.jsx","index.js","components/filter/Filter.module.css"],"names":["module","exports","ContactsForm","addContact","useState","name","setName","number","setNunber","onHandleChange","e","target","value","className","s","form","onSubmit","preventDefault","title","data","type","pattern","required","onChange","addBtn","ContactsList","contacts","onRemoveContact","map","contact","delBtn","onClick","id","Filter","onChangeFilter","App","setContacts","filter","setFilter","useEffect","savedContacts","JSON","parse","localStorage","getItem","prev","setItem","stringify","user","toLowerCase","includes","alert","shortid","generate","normalizedFilter","getFilteredContacts","contactId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cddde4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delBtn\":\"ContactsList_delBtn__17SZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3pqMp\",\"addBtn\":\"ContactsForm_addBtn__3IZpM\",\"data\":\"ContactsForm_data__2HDS-\",\"title\":\"ContactsForm_title__2eBgR\"};","import { useState } from 'react';\r\nimport s from './ContactsForm.module.css';\r\n\r\nconst ContactsForm = ({ addContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNunber] = useState('');\r\n\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    addContact({ name, number });\r\n    setName('');\r\n    setNunber('');\r\n  };\r\n\r\n  const onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNunber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onHandleSubmit}>\r\n      <label className={s.title}>\r\n        Name\r\n        <input\r\n          className={s.data}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n      <label className={s.title}>\r\n        Number\r\n        <input\r\n          className={s.data}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.addBtn} type=\"submit\">\r\n        add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactsForm;\r\n","import s from './ContactsList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts?.map(contact => (\r\n          <li key={contact.id}>\r\n            {`${contact.name} : ${contact.number}`}\r\n            <button\r\n              className={s.delBtn}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={() => onRemoveContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import s from './Filter.module.css'\r\nimport PropTypes from \"prop-types\"; \r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n    return (\r\n        <>\r\n        <label className={s.title} >Find contacts by name\r\n                <input\r\n                    className={s.data}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => onChangeFilter(e.target.value)} />\r\n        </label>\r\n        </>\r\n    );\r\n}\r\nexport default Filter;\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};","import { useState, useEffect } from 'react';\nimport ContactsForm from './contactsForm/ContactsForm';\nimport ContactsList from './contactsList/ContactsList';\nimport Filter from './filter/Filter';\nimport shortid from 'shortid';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const savedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (savedContacts) {\n      setContacts(prev => [...prev, ...savedContacts]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = number => {\n    const searchRepeat = contacts\n      .map(user => user.name.toLowerCase())\n      .includes(number.name.toLowerCase());\n\n    if (searchRepeat) {\n      alert(`${number.name} is already in contacts`);\n    } else {\n      const contact = {\n        ...number,\n        id: shortid.generate(),\n      };\n      setContacts(prev => [...prev, contact]);\n    }\n  };\n  const changeFilter = filter => {\n    setFilter(filter);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  const removeContact = contactId => {\n    setContacts(prev => [...prev.filter(contact => contact.id !== contactId)]);\n    return;\n  };\n\n  return (\n    <>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactsForm addContact={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={changeFilter} />\n        <ContactsList contacts={getFilteredContacts()} onRemoveContact={removeContact} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__t8Pis\",\"data\":\"Filter_data__3__zK\",\"title\":\"Filter_title__1pjzO\"};"],"sourceRoot":""}